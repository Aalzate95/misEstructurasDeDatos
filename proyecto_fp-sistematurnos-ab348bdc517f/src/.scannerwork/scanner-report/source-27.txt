/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package espol.edu.ec.presentacion.pantalla;

import espol.edu.ec.modelo.Sistema;
import espol.edu.ec.modelo.tdas.DoublyCircularList;
import espol.edu.ec.presentacion.SistemaTurnosG3;
import espol.edu.ec.presentacion.admin.StageAdmin;
import espol.edu.ec.modelo.tdas.Paciente;
import java.io.File;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.PriorityQueue;
import java.util.Queue;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.stage.Stage;

/**
 *
 * @author Charles
 */
public class Pantalla {

    private static MediaView mv;
    private static MediaPlayer mp;
    private static Stage ventanaPantalla;
    private static BorderPane root;
    private static Scene sc;
    private static DoublyCircularList<Media> lmedia;
    private static ListIterator<Media> lit;
    
    public static void mostrar() {
        root = new BorderPane();
        
        root.setCenter(crearCentro());
        

        PriorityQueue<Paciente> pq = Sistema.lpriorPacientes;
        while (!(pq.isEmpty())) {
            Paciente p = pq.poll();
            System.out.println(p);
        }

        sc = new Scene(root, 700, 500);
        ventanaPantalla = new Stage();
        ventanaPantalla.setTitle("PANTALLA DE ESPERA");
        ventanaPantalla.setScene(sc);
        ventanaPantalla.show();
    }
    
    public static void cerrar(){
        ventanaPantalla.close();
    }
    
    private static void Algo(){
         mp.setOnEndOfMedia(() -> {
//                contador = contador + 1;
//            if (contador > lmedia.size() - 1) {
//                contador = 0;
//            }
//                mp = new MediaPlayer(lmedia.get(contador));
                mp = new MediaPlayer(lit.next());
                mv.setMediaPlayer(mp);
                mp.play();
                
                Algo();

            });
    }

    private static Node crearCentro() {
        HBox hbCentro = new HBox();
        hbCentro.setSpacing(10);
        hbCentro.setPadding(new Insets(10,0,10,0));
        
        Group gpMedia = new Group();
        lmedia = new DoublyCircularList();
        lmedia.addLast(new Media(new File("1.mp4").toURI().toString()));
        lmedia.addLast(new Media(new File("2.mp4").toURI().toString()));
//        lmedia.addLast(new Media(new File("3.mp4").toURI().toString()));
//        lmedia.addLast(new Media(new File("4.mp4").toURI().toString()));
        lit = lmedia.listIterator();
        
        Media primero = lit.next();
        mp = new MediaPlayer(primero);

        mv = new MediaView();
        mv.setMediaPlayer(mp);

        mv.setFitHeight(300.0);
        mv.setFitWidth(300.0);

        mv.setLayoutX(20);
        mv.setLayoutY(160);

        //Creacion de botones
        Button btp = new Button("PLAY");
        Button btpa = new Button("PAUSE");
        Button btns = new Button("STOP");
        Button menu = new Button("MENU");
        Button btnNext = new Button("NEXT");
        Button btnPrev = new Button("PREV");

//        mp.play();
        
        //Controlar el evento para cuando cada video termine
       Algo();

        //Evento de los botones
        btp.setOnAction(e -> {
            mp.play();
        });
        //Evento de los botones
        btpa.setOnAction(e -> {
            mp.pause();
        });

        btns.setOnAction(e -> {
            mp.stop();
        });

        menu.setOnAction(e -> {
            SistemaTurnosG3.primaryStage.setScene(StageAdmin.crearMA());
            mp.stop();
        });
        
        btnNext.setOnAction(e -> {
            mp.stop();
            mp = new MediaPlayer(lit.next());
            mv.setMediaPlayer(mp);
            Algo();
            mp.play();
        });
        
        btnPrev.setOnAction(e -> {
            mp.stop();
            mp = new MediaPlayer(lit.previous());
            mv.setMediaPlayer(mp);
            Algo();
            mp.play();
        });
        //Ubicacion de los botones
        btp.setLayoutX(10);
        btp.setLayoutY(400);

        btpa.setLayoutX(60);
        btpa.setLayoutY(400);

        btns.setLayoutX(120);
        btns.setLayoutY(400);

        btnNext.setLayoutX(220);
        btnNext.setLayoutY(400);
        
        btnPrev.setLayoutX(170);
        btnPrev.setLayoutY(400);
        
        menu.setLayoutX(270);
        menu.setLayoutY(400);
        gpMedia.getChildren().addAll(mv, btp, btpa, btns, btnNext, btnPrev, menu);
        
        VBox vbTurno = new VBox(new HBox(new Label("TURNO"),new Label("PUESTO")));
        Queue<HBox> colaTurno = new LinkedList<>();
        VBox vbcola = new VBox();
        vbcola.getChildren().addAll(colaTurno);
        
        hbCentro.getChildren().addAll(gpMedia,vbcola);
        return hbCentro;
    }
    
    public static void llenarColaTurno(String turno, String puesto){
        
    }
}
